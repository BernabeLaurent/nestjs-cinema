name: CI Build, Test & Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: cinema
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5433:5432

      mongodb:
        image: mongo:7
        ports:
          - 27017:27017

    steps:
      # Checkout du code source
      - uses: actions/checkout@v3

      # Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      # Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape de débogage pour vérifier que le secret est bien chargé
      - name: Check GitHub Secret GITHUBACTIONS
        run: |
          echo "Checking if GITHUBACTIONS secret is loaded:"
          echo "${{ secrets.GITHUBACTIONS }}" # Cela ne doit pas afficher la clé en entier pour des raisons de sécurité, mais vérifie que le secret est chargé

      # Configuration de la clé SSH
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITHUBACTIONS }}" > ~/.ssh/github-actions
          chmod 600 ~/.ssh/github-actions
          ssh-keyscan -H 159.89.20.85 >> ~/.ssh/known_hosts

      # Étapes de débogage pour vérifier si la clé SSH a bien été stockée et a les bonnes permissions
      - name: Debug SSH Key
        run: |
          echo "Listing files in ~/.ssh"
          ls -l ~/.ssh
          echo "Permissions of the SSH key:"
          ls -l ~/.ssh/github-actions
          echo "SSH key content (first 5 lines):"
          head -n 5 ~/.ssh/github-actions

      # Copier le fichier .env.docker sur le droplet et le renommer en .env
      - name: Copy .env.docker to Droplet only if .env does not exist
        run: |
          ssh -i ~/.ssh/github-actions root@159.89.20.85 'if [ ! -f /var/www/nestjs-cinema/.env ]; then exit 1; fi'
        continue-on-error: true
      - name: Upload .env.docker only if .env does not exist
        if: failure()
        run: |
          scp -i ~/.ssh/github-actions .env.docker root@159.89.20.85:/var/www/nestjs-cinema/.env

      # Déployer l'application sur le Droplet
      - name: Deploy to Droplet
        run: |
          ssh -i ~/.ssh/github-actions root@159.89.20.85 << 'EOF'
            cd /var/www/nestjs-cinema
            git pull origin main
            docker-compose down
            docker-compose build
            docker-compose up -d
          EOF
