services:
  nestjs-backend:
    build: .
    container_name: nestjs-cinema-app
    ports:
      - "${NESTJS_PORT}:3000"
    env_file:
      - .env
    depends_on:
      - postgres
      - mongodb
    volumes:
      - .:/app
      - ./uploads:/app/uploads  # Montée du volume Docker pour les fichiers téléchargés
    restart: unless-stopped
    entrypoint: [ "sh", "./scripts/entrypoint.sh", "node", "dist/main" ]
    networks:
      - cinema-net

  angular-frontend:
    build:
      context: ../angular-cinema   # chemin vers le projet Angular
    container_name: angular-cinema-app
    ports:
      - "4200:80"
    environment:
      - API_URL=http://nestjs-backend:3000
    depends_on:
      - nestjs-backend
    restart: unless-stopped
    networks:
      - cinema-net

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DATABASE_NAME}         # Nom de la base de données
      POSTGRES_USER: ${DATABASE_USER}     # Utilisateur PostgreSQL
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}  # Mot de passe PostgreSQL
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - cinema-net

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    restart: unless-stopped
    networks:
      - cinema-net

volumes:
  pgdata:
  mongodata:
  uploads:
    driver: local  # Volume Docker persistant pour le dossier uploads

networks:
  cinema-net:
    driver: bridge
